// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.skia;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.skia.global.Skia.*;


@Properties(inherit = org.bytedeco.skia.presets.Skia.class)
public class sk_colorspaceprimaries_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public sk_colorspaceprimaries_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public sk_colorspaceprimaries_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public sk_colorspaceprimaries_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public sk_colorspaceprimaries_t position(long position) {
        return (sk_colorspaceprimaries_t)super.position(position);
    }

    public native float fRX(); public native sk_colorspaceprimaries_t fRX(float fRX);
    public native float fRY(); public native sk_colorspaceprimaries_t fRY(float fRY);
    public native float fGX(); public native sk_colorspaceprimaries_t fGX(float fGX);
    public native float fGY(); public native sk_colorspaceprimaries_t fGY(float fGY);
    public native float fBX(); public native sk_colorspaceprimaries_t fBX(float fBX);
    public native float fBY(); public native sk_colorspaceprimaries_t fBY(float fBY);
    public native float fWX(); public native sk_colorspaceprimaries_t fWX(float fWX);
    public native float fWY(); public native sk_colorspaceprimaries_t fWY(float fWY);
}
